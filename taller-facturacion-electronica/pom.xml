<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>ec.facturacion.electronica</groupId>
	<artifactId>cliente-facturacion-electronica</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>Cliente de Facturación electrónica</name>
	<description>Cliente de Facturación electrónica</description>
	<url>https://github.com/texalbuja/taller-facturacion-electronica</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>
		<version.jboss.bom>8.2.1.Final</version.jboss.bom>
		<version.compiler.plugin>3.1</version.compiler.plugin>
		<version.surefire.plugin>2.16</version.surefire.plugin>
		<version.war.plugin>2.5</version.war.plugin>
		<maven.compiler.target>1.7</maven.compiler.target>
		<maven.compiler.source>1.7</maven.compiler.source>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.wildfly.bom</groupId>
				<artifactId>jboss-javaee-7.0-with-tools</artifactId>
				<version>${version.jboss.bom}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.wildfly.bom</groupId>
				<artifactId>jboss-javaee-7.0-with-hibernate</artifactId>
				<version>${version.jboss.bom}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<!-- First declare the APIs we depend on and need for compilation. All 
			of them are provided by JBoss WildFly -->

		<!-- Import the CDI API, we use provided scope as the API is included in 
			JBoss WildFly -->
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the Common Annotations API (JSR-250), we use provided scope 
			as the API is included in JBoss WildFly -->
		<dependency>
			<groupId>org.jboss.spec.javax.annotation</groupId>
			<artifactId>jboss-annotations-api_1.2_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the JAX-RS API, we use provided scope as the API is included 
			in JBoss WildFly -->
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>jaxrs-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the JPA API, we use provided scope as the API is included in 
			JBoss WildFly -->
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.1-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the EJB API, we use provided scope as the API is included in 
			JBoss WildFly -->
		<dependency>
			<groupId>org.jboss.spec.javax.ejb</groupId>
			<artifactId>jboss-ejb-api_3.2_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- JSR-303 (Bean Validation) Implementation -->
		<!-- Provides portable constraints such as @Email -->
		<!-- Hibernate Validator is shipped in JBoss WildFly -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Import the JSF API, we use provided scope as the API is included in 
			JBoss WildFly -->
		<dependency>
			<groupId>org.jboss.spec.javax.faces</groupId>
			<artifactId>jboss-jsf-api_2.2_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Now we declare any tools needed -->

		<!-- Annotation processor to generate the JPA 2.0 metamodel classes for 
			typesafe criteria queries -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-jpamodelgen</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Annotation processor that raising compilation errors whenever constraint 
			annotations are incorrectly used. -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator-annotation-processor</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Needed for running tests (you may also use TestNG) -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Optional, but highly recommended -->
		<!-- Arquillian allows you to test enterprise code such as EJBs and Transactional(JTA) 
			JPA from JUnit/TestNG -->
		<dependency>
			<groupId>org.jboss.arquillian.junit</groupId>
			<artifactId>arquillian-junit-container</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.arquillian.protocol</groupId>
			<artifactId>arquillian-protocol-servlet</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.primefaces</groupId>
			<artifactId>primefaces</artifactId>
			<version>6.0</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>javax.xml</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.1</version>
		</dependency>
		<dependency>
			<groupId>batik</groupId>
			<artifactId>batik-bridge</artifactId>
			<version>1.6-1</version>
		</dependency>
		<dependency>
			<groupId>batik</groupId>
			<artifactId>batik-script</artifactId>
			<version>1.6-1</version>
		</dependency>
		<!-- Las siguientes librerías no están en el repositorio maven, por lo 
			que las importamos desde la carpeta lib -->
		<dependency>
			<groupId>MITyCLibAPI</groupId>
			<artifactId>MITyCLibXADES</artifactId>
			<version>1.1.7</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/MITyCLibXADES-1.1.7.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>MITyCLibTSA</groupId>
			<artifactId>MITyCLibTSA</artifactId>
			<version>1.1.7</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/MITyCLibTSA-1.1.7.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>MITyCLibTrust</groupId>
			<artifactId>MITyCLibTrust</artifactId>
			<version>1.1.7</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/MITyCLibTrust-1.1.7.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>MITyCLibPolicy</groupId>
			<artifactId>MITyCLibPolicy</artifactId>
			<version>1.1.7</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/MITyCLibPolicy-1.1.7.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>MITyCLibOCSP</groupId>
			<artifactId>MITyCLibOCSP</artifactId>
			<version>1.1.7</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/MITyCLibOCSP-1.1.7.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>MITyCLibCrypt</groupId>
			<artifactId>MITyCLibCrypt</artifactId>
			<version>1.1.7</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/MITyCLibCrypt-1.1.7.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>MITyCLibCert</groupId>
			<artifactId>MITyCLibCert</artifactId>
			<version>1.1.7</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/MITyCLibCert-1.1.7.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>MITyCLibAPI</groupId>
			<artifactId>MITyCLibAPI</artifactId>
			<version>1.1.7</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/MITyCLibAPI-1.1.7.jar</systemPath>
		</dependency>

		<dependency>
			<groupId>xmlsec</groupId>
			<artifactId>xmlsec</artifactId>
			<version>1.4.2-ADSI</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/xmlsec-1.4.2-ADSI-1.1.jar</systemPath>
		</dependency>

		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bctsp-jdk16</artifactId>
			<version>1.45</version>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
		</dependency>

		<!-- Para exportar comprobantes RIDE en pdf -->
		<dependency>
			<groupId>net.sf.jasperreports</groupId>
			<artifactId>jasperreports</artifactId>
			<version>5.6.0</version>
		</dependency>
		<dependency>
			<groupId>net.sf.barcode4j</groupId>
			<artifactId>barcode4j</artifactId>
			<version>2.1</version>
		</dependency>
		<dependency>
			<groupId>xalan</groupId>
			<artifactId>xalan</artifactId>
			<version>2.7.0</version>
		</dependency>

	</dependencies>
</project>